main_branch: &main_branch
  filters:
    branches:
      only: main
feature_branch: &feature_branch
  filters:
    branches:
      ignore: main

version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@9.4.0

parameters:
  alerts-slack-channel:
    type: string
    default: send-legal-mail-alerts
  releases-slack-channel:
    type: string
    default: send-legal-mail-alerts

executors:
  integration-test-validator:
    docker:
      - image: cimg/openjdk:21.0.0
      - image: cimg/postgres:15.5
        environment:
          POSTGRES_PASSWORD: admin_password
          POSTGRES_USER: admin
          POSTGRES_DB: send_legal_mail_api_db
      - image: sj26/mailcatcher
      - image: localstack/localstack:0.13.1
        environment:
          SERVICES: s3
          DEBUG: ${DEBUG- }
          DATA_DIR: /tmp/localstack/data
          DOCKER_HOST: unix:///var/run/docker.sock
          LAMBDA_EXECUTOR: ${LAMBDA_EXECUTOR- }
          AWS_EXECUTION_ENV: True
          DEFAULT_REGION: eu-west-2
          TMPDIR: /private
    environment:
      _JAVA_OPTIONS: -Xmx256m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process -Dorg.gradle.workers.max=1
    working_directory: ~/app

  smoke-test:
    docker:
      - image: cypress/included:13.6.4
    working_directory: ~/tests

jobs:
  validate:
    executor: integration-test-validator
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - run:
          command: ./gradlew --daemon check
      - run:
          command: ./gradlew --daemon testIntegration
      - run:
          command: ./gradlew --daemon combineJacocoReports
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
      - store_artifacts:
          path: build/reports/jacoco

  artillery:
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - checkout
      - hmpps/k8s_setup
      - run:
          name: Install node
          command: |
            sudo apt update
            sudo apt install -y nodejs npm
      - run:
          name: Execute load tests
          command: |
            cd artillery
            ./artillery --ramp-up-target-vusers 25 --sustained-load-vusers 25 --sustained-load-duration 600 --quiet
      - store_artifacts:
          path: artillery/test-run-report.json
      - store_artifacts:
          path: artillery/test-run-report.json.html

  run_smoke_test:
    circleci_ip_ranges: true
    executor: smoke-test
    parameters:
      env:
        type: string
        default: dev
    steps:
      - run:
          name: Checkout UI project
          command: git clone https://github.com/ministryofjustice/send-legal-mail-to-prisons.git
      - run:
          name: Install curl
          command: apt-get update && apt-get install -y curl
      - run:
          name: Install jq
          command: apt-get update && apt-get install -y jq
      - hmpps/k8s_setup
      - run:
          name: Run smoke tests in << parameters.env >>
          command: |
            cd send-legal-mail-to-prisons/smoke_tests
            ./run-smoke-test.sh \
              --env << parameters.env >> \
              --lsj-secret $(kubectl -n send-legal-mail-to-prisons-<< parameters.env >> get secret smoke-test --template={{.data.APP_SMOKETEST_LSJSECRET}} | base64 -d) \
              --msj-secret $(kubectl -n send-legal-mail-to-prisons-<< parameters.env >> get secret smoke-test --template={{.data.APP_SMOKETEST_MSJSECRET}} | base64 -d) \
              --lsj-url https://send-legal-mail-<< parameters.env >>.prison.service.justice.gov.uk \
              --msj-url https://check-rule39-mail-<< parameters.env >>.prison.service.justice.gov.uk \
              --cypress-exe cypress
      - store_test_results:
          path: /tmp/slm-smoke-test-<< parameters.env >>/test_results
      - store_artifacts:
          path: /tmp/slm-smoke-test-<< parameters.env >>/videos
      - store_artifacts:
          path: /tmp/slm-smoke-test-<< parameters.env >>/screenshots
      - store_artifacts:
          path: /tmp/slm-smoke-test-<< parameters.env >>/downloads

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - validate:
          filters:
            tags:
              ignore: /.*/
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_multiplatform_docker:
          name: build_docker
      - request-dev-preview-approval:
          <<: *feature_branch
          type: approval
          requires:
            - helm_lint
            - validate
            - build_docker
      - hmpps/deploy_env:
          <<: *feature_branch
          name: deploy_dev_preview
          env: "dev"
          context: hmpps-common-vars
          requires:
            - request-dev-preview-approval
      - run_smoke_test:
          name: smoke_test_dev_preview
          env: dev
          requires:
            - deploy_dev_preview

      - hmpps/deploy_env:
          <<: *main_branch
          name: deploy_dev
          env: "dev"
          context: hmpps-common-vars
          requires:
            - helm_lint
            - validate
            - build_docker

      - run_smoke_test:
          name: smoke_test_dev
          env: dev
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          context:
            - hmpps-common-vars
            - send-legal-mail-to-prisons-api-preprod
          requires:
            - smoke_test_dev
      - run_smoke_test:
          name: smoke_test_preprod
          env: preprod
          requires:
            - deploy_preprod
          context:
            - hmpps-common-vars
            - send-legal-mail-to-prisons-preprod
      - request-prod-approval:
          type: approval
          requires:
            - smoke_test_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          context:
            - hmpps-common-vars
            - send-legal-mail-to-prisons-api-prod
          requires:
            - request-prod-approval

  security:
    triggers:
      - schedule:
          cron: "27 7 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/gradle_owasp_dependency_check:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
          cache_key: "v2_0"
          jdk_tag: "21.0"
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          jdk_tag: "21.0"
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
  security-weekly:
    triggers:
      - schedule:
          cron: "2 7 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          jdk_tag: "21.0"
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars

  artillery-nightly:
    triggers:
      - schedule:
          cron: "0 3 * * 1-5" # 3am Monday-Friday
          filters:
            branches:
              only:
                - main
    jobs:
      - artillery:
          name: Artillery Tests
